services:
  server:
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      - SERVER_HEALTHY=FALSE
    volumes:
      - server_files:${SERVER_FILES_MOUNTPOINT}
    links:
      - "mysql:database"
    depends_on:
      - mysql # db must be started before server
    entrypoint: [./scripts/wait_for_it.sh, "mysql:3306", "--", "./main"] #ensure the server waits for the db

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
    - ./Caddyfile:/etc/caddy/Caddyfile
    - caddy_data:/data #persist caddy data
    - caddy_config:/config #persist caddy config
    depends_on:
      - server
    healthcheck:
      test: ["CMD-SHELL", "/bin/sh", "wget", "--no-verbose", "--tries=1", "--spider", "--no-check-certificate", "https://localhost/ping", "||", "exit", "1"]
      interval: 8s
      timeout: 1s
      retries: 2
      start_period: 30s

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASS}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "--silent"]
      interval: 13s
      timeout: 3s
      retries: 2
      start_period: 30s

volumes:
  mysql_data:
  caddy_data:
  caddy_config:
  server_files:
